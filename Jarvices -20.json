{
  "name": "Jarvices -20",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "n8n",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        416,
        320
      ],
      "id": "e41dda3e-ffb8-4fb2-85ea-0902fc9451b2",
      "name": "Webhook",
      "webhookId": "dced53d2-e10e-4357-9d22-4f8db19efa7c"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.text }}{{ $json.body.query }}",
        "options": {
          "systemMessage": "=# Overview\nYou are the ultimate personal assistant. Your job is to send the user's query to the correct tool. You should never be writing emails, or creating even summaries, you just need to call the correct tool.\n\n## Tools\n- emailAgent: Use this tool to take action in email\n- calendarAgent: Use this tool to take action in calendar\n- contactAgent: Use this tool to get, update, or add contacts\n- contentCreator: Use this tool to create blog posts\n- Serpapi : Use this tool to search the web\n- Project_management : it is useful to get project data, tasks, todos of the company and of the team and you can get the team progress from there.  You'll be getting project details from here and the contact details from the contactAgent.\n\n## Rules\n- Some actions require you to look up contact information first. For the following actions, you must get contact information and send that to the agent who needs it:\n  - sending emails\n  - drafting emails\n  - creating calendar event with attendee\n\n## Examples\n1) \n- Input: send an email to nate herkelman asking him what time he wants to leave\n  - Action: Use contactAgent to get nate herkelman's email\n  - Action: Use emailAgent to send the email. You will pass the tool a query like \"send nate herkelman an email to ask what time he wants to leave. here is his email: [email address]\n- Output: The email has been sent to Nate Herkelman. Anything else I can help you with?\n\n\n## Final Reminders\nHere is the current date/time: {{ $now }}"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        704,
        320
      ],
      "id": "9996f52a-6871-4d24-9624-c6577c3bc65e",
      "name": "Jarvis"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4o",
          "mode": "list",
          "cachedResultName": "gpt-4o"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        560,
        656
      ],
      "id": "e8dbf115-adc1-4e20-a18d-8ce2aff04055",
      "name": "4o",
      "credentials": {
        "openAiApi": {
          "id": "OgtpJs1hg0G9EgD2",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('Webhook').item.json.headers.host }}",
        "contextWindowLength": 4
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        720,
        656
      ],
      "id": "24b237aa-ded4-4dd3-9d4c-c689123e6898",
      "name": "Simple Memory"
    },
    {
      "parameters": {
        "content": "# JARVIS Main Agent\n",
        "height": 260,
        "width": 380,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        640,
        208
      ],
      "typeVersion": 1,
      "id": "39b490e9-d02a-4814-8f76-99a828640475",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "Telegram ",
        "height": 436,
        "width": 996,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1136,
        2688
      ],
      "typeVersion": 1,
      "id": "7eb7595f-9c58-42b2-aeea-c084d76728c7",
      "name": "Sticky Note1",
      "disabled": true
    },
    {
      "parameters": {
        "updates": [
          "message"
        ],
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegramTrigger",
      "typeVersion": 1.2,
      "position": [
        -1088,
        2848
      ],
      "id": "8a45e4f0-aea9-4700-894b-ed9a781c1797",
      "name": "Telegram Trigger",
      "webhookId": "f1633496-a7b1-471b-b76c-f7594d34e024",
      "credentials": {
        "telegramApi": {
          "id": "n0SWlPB2hJSEOPQI",
          "name": "vimsai"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.message.voice.file_id }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "exists",
                      "singleValue": true
                    },
                    "id": "2824a708-01a9-42a6-888c-9db9adfdaeb5"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Voice"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "0ce16cbd-33d6-438a-9938-32ae29c4a2ac",
                    "leftValue": "={{ $json.message.text || \"\" }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "exists",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Text"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -912,
        2848
      ],
      "id": "4c9c3c46-010b-417d-8c0b-7f4a6c4d3f39",
      "name": "Switch",
      "disabled": true
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "915e43bc-7606-42bb-ba19-5e055e3ed435",
              "name": "text",
              "value": "={{ $json.message.text }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -576,
        2928
      ],
      "id": "313fab81-ff36-4a4a-a80a-6bd723f30c70",
      "name": "Input_Var",
      "disabled": true
    },
    {
      "parameters": {
        "resource": "file",
        "fileId": "={{ $json.message.voice.file_id }}",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -704,
        2752
      ],
      "id": "406515a8-0cdb-43b0-b112-bb72a195c5b7",
      "name": "Get a file",
      "webhookId": "48c87078-8331-45c3-87cf-7d13d031febf",
      "credentials": {
        "telegramApi": {
          "id": "n0SWlPB2hJSEOPQI",
          "name": "vimsai"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        -528,
        2752
      ],
      "id": "f94b6907-22e5-4700-b241-8dd13a3c95b8",
      "name": "Transcribe GPT",
      "credentials": {
        "openAiApi": {
          "id": "OgtpJs1hg0G9EgD2",
          "name": "OpenAi account"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "bf65273e-e23d-4eff-8cbe-523771f7ef81",
              "name": "text",
              "value": "={{ $json.text }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -336,
        2752
      ],
      "id": "de775f7d-f4e6-4de8-aa57-e29eb682c55a",
      "name": "Edit Fields",
      "disabled": true
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.message.chat.id }}",
        "text": "={{ $json.output }}",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -304,
        2944
      ],
      "id": "d7273dc0-21f2-4baf-9d1f-97cb46e8da65",
      "name": "Send a text message",
      "webhookId": "e0051a45-084a-4520-a9c3-2ad53270dafa",
      "credentials": {
        "telegramApi": {
          "id": "n0SWlPB2hJSEOPQI",
          "name": "vimsai"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "=telegram_ {{ $json.message.chat.id }}",
        "contextWindowLength": 6
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        -800,
        2976
      ],
      "id": "606b0609-c7ca-4ac0-9adc-0e93ec93efcf",
      "name": "Simple Memory1",
      "disabled": true
    },
    {
      "parameters": {
        "endpointUrl": "https://vims.ascendwithasvin.com/mcp/32c4c423-333d-4a19-9018-dcdd1a0f984c"
      },
      "type": "@n8n/n8n-nodes-langchain.mcpClientTool",
      "typeVersion": 1.1,
      "position": [
        896,
        656
      ],
      "id": "1812fe4d-b091-4168-8145-c5aab2f3bb74",
      "name": "MCP Client"
    },
    {
      "parameters": {
        "content": "# IMPORTANT",
        "height": 300,
        "width": 728
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        400,
        496
      ],
      "id": "56698fae-f337-469c-a8ea-798b085aa208",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        1104,
        320
      ],
      "id": "1d87b542-e49d-4794-8651-79bf69c4de8f",
      "name": "Respond to Webhook1"
    }
  ],
  "pinData": {},
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "Jarvis",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Jarvis": {
      "main": [
        [
          {
            "node": "Respond to Webhook1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "4o": {
      "ai_languageModel": [
        [
          {
            "node": "Jarvis",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "Jarvis",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Telegram Trigger": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Get a file",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Input_Var",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get a file": {
      "main": [
        [
          {
            "node": "Transcribe GPT",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Transcribe GPT": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        []
      ]
    },
    "Input_Var": {
      "main": [
        []
      ]
    },
    "Simple Memory1": {
      "ai_memory": [
        []
      ]
    },
    "MCP Client": {
      "ai_tool": [
        [
          {
            "node": "Jarvis",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1",
    "timezone": "Asia/Kolkata",
    "callerPolicy": "workflowsFromSameOwner"
  },
  "versionId": "0ccb06f2-7fea-4767-a0ba-fc6db21960c6",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "2da198d4871c8b47e7f385edabca21cb45ad63e67689070edd243c77eaa2830d"
  },
  "id": "iFehtVCMb2Nwph2p",
  "tags": []
}